from typing import Any
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

import app.database.models as md
import app.database.requests as rq
import app.keyboards.shop_keyboards as kb


shop_router = Router()
shop_router.message.filter(F.chat.type == 'supergroup')


@shop_router.message(Command(commands=['shop']))
async def cmd_shop(message: Message) -> Any:
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞–≥–∞–∑–∏–Ω! üõí\n\n–¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=kb.main)


@shop_router.callback_query(F.data == 'back_shop')
async def back_shop(callback: CallbackQuery) -> Any:
    await callback.answer(None)
    await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞–≥–∞–∑–∏–Ω! üõí\n\n–¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=kb.main)


@shop_router.callback_query(F.data == 'food_shop')
async def food_shop(callback: CallbackQuery) -> Any:
    await callback.answer(None)
    await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∂—Ä–∞–ª—å–Ω—é –¥–∏–∫–æ–≥–æ –∑–∞–ø–∞–¥–∞, —É –Ω–∞—Å –µ—Å—Ç—å:\n\n–°–∫—É–±–∏ –°–Ω—ç–∫: 15 –¥–µ–Ω–µ–≥\n5 –∑–∞ 300: three hundred bucks", reply_markup=kb.buy_food)


@shop_router.callback_query(F.data == 'buy_scooby_snack')
async def buy_scooby_snack(callback: CallbackQuery) -> Any:
    user = await rq.get_user(callback.from_user.id)
    item = await rq.get_item(callback.from_user.id)
    if user.money >= 15:
        user.money -= 15
        item.scooby_snack += 1
        async with md.async_session() as session:
            await session.merge(user)
            await session.merge(item)
            await session.commit()
        await callback.message.answer("–°–∫—É–±–∏ –°–Ω—ç–∫ –∫—É–ø–ª–µ–Ω!\n–ï—â—ë –æ–¥–∏–Ω –∏–ª–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ?", reply_markup=kb.buy_food)
    elif user.money < 15:
        await callback.message.answer("–•–∞-—Ö–∞ –Ω–∏—â–∏–µ–±, –∫—Ä–∏–≤–æ–∑—É–±—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω, —Å—Ö–æ–¥–∏ –¥–µ–Ω–µ–≥ –∑–∞—Ä–∞–±–æ—Ç–∞–π")
    await callback.answer(None)


@shop_router.callback_query(F.data == 'buy_five')
async def buy_five(callback: CallbackQuery) -> Any:
    user = await rq.get_user(callback.from_user.id)
    item = await rq.get_item(callback.from_user.id)
    if user.money >= 300:
        user.money -= 300
        item.five_for_threehundred += 1
        async with md.async_session() as session:
            await session.merge(user)
            await session.merge(item)
            await session.commit()
        await callback.message.answer("–Ø —Å–º–æ—Ç—Ä—é –≤—ã —Ü–µ–Ω–∏—Ç–µ–ª—å\n–ë–∏–ª–ª–∏ —É–∂–µ –∂–¥—ë—Ç)", reply_markup=kb.buy_food)
    elif user.money < 300:
        await callback.message.answer("–•–∞-—Ö–∞ –Ω–∏—â–∏–µ–±, –∫—Ä–∏–≤–æ–∑—É–±—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω, —Å—Ö–æ–¥–∏ –¥–µ–Ω–µ–≥ –∑–∞—Ä–∞–±–æ—Ç–∞–π")
    await callback.answer(None)


@shop_router.callback_query(F.data == 'clothes_shop')
async def clothes_shop(callback: CallbackQuery) -> Any:
    await callback.answer(None)
    await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ M&M —Å–∞–º—ã–π –ª—É—á—à–∏–π –º–∞–≥–∞–∑–∏–Ω –æ–¥–µ–∂–Ω—ã –≤ –£—Ä—é–ø–∏–Ω—Å–∫–µ, –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å:\n\n–õ–∞—Ç–µ–∫—Å–Ω—ã–π –∫–æ—Å—Ç—é–º: 1000 cumcoins", reply_markup=kb.buy_clothes)


@shop_router.callback_query(F.data == 'buy_latex')
async def buy_latex(callback: CallbackQuery) -> Any:
    user = await rq.get_user(callback.from_user.id)
    item = await rq.get_item(callback.from_user.id)
    if user.money >= 1000:
        user.money -= 1000
        item.lutex_suit = True
        async with md.async_session() as session:
            await session.merge(user)
            await session.merge(item)
            await session.commit()
        await callback.message.answer("–û-–æ-–æ, –º–Ω–µ —Ç–æ–∂–µ —Ç–∞–∫–æ–µ –Ω—Ä–∞–≤–∏—Ç—Å—è)\n–í—Å—Ç—Ä–µ—Ç–∏–º—Å—è –≤ –∫–ª—É–±–µ)", reply_markup=kb.buy_clothes)
    elif user.money < 1000:
        await callback.message.answer("–°—ç—Ä, —Å—é–¥—è –ø–æ –≤—Å–µ–º—É –≤—ã –ª–∏—à—å –∂–∞–ª–∫–æ–µ –ø–æ–¥–æ–±–∏–µ —á–µ–ª–æ–≤–µ–∫–∞, –Ω–µ—Å–ø–æ—Å–æ–±–Ω–æ–µ –¥–∞–∂–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –±–∞–∑–æ–≤—É—é –≤–µ—â—å.")
    await callback.answer(None)