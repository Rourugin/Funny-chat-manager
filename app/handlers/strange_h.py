import os
import random
import asyncio
from typing import Any
from dotenv import load_dotenv
from contextlib import suppress
from aiogram.types import Message
from aiogram import Router, F, Bot
from aiogram.types import ChatPermissions
from aiogram.exceptions import TelegramBadRequest

import app.database.models as md
import app.database.requests as rq
import app.helpers.processing as pc


load_dotenv()
bot = Bot(token=os.getenv('TOKEN'))
strange_router = Router()
strange_router.message.filter(F.chat.type == 'supergroup')


@strange_router.message(F.text.lower() == '–≥–ª–∏–Ω—å-–¥–∏–ª–∏–Ω—å')
async def nuclear_war(message: Message) -> Any:
    war_frases = ["–°–æ—Å–∞—Ç—å –ê–º–µ—Ä–∏–∫–∞!", "Burunya", "Shokonokonokokostantan"]
    await message.answer("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è–Ø–î–ï–†–ù–ê–Ø –í–û–ô–ù–ê –ù–ê–ß–ù–Å–¢–°–Ø –ß–ï–†–ï–ó 10 –°–ï–ö–£–ù–î‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è")
    await asyncio.sleep(10)
    while True:
        await asyncio.sleep(0.5)
        random_frase = random.choice(war_frases)
        await message.answer(random_frase)


@strange_router.message(F.text.startswith('+–≥–µ–Ω–¥–µ—Ä'))
async def new_gender(message: Message) -> Any:
    gender_space = message.text.find(' ')
    gender = message.text[gender_space + 1:]
    user = await rq.get_user(message.from_user.id)
    user.gender = gender
    async with md.async_session() as session:
        await session.merge(user)
        await session.commit()
    if gender.lower() == "clown":
        item = await rq.get_item(message.from_user.id)
        item.clown_suit = True
        async with md.async_session() as session:
            await session.merge(item)
            await session.commit()
        await message.answer("–ù—É, —Ç—ã –∏ –∫–ª–æ—É–Ω, –∫–æ–Ω–µ—á–Ω–æ, –ª–æ–≤–∏ –∫–æ—Å—Ç—é–ºü§°")
    await message.answer(f"–¢–≤–æ–π –≥–µ–Ω–¥–µ—Ä: {user.gender}‚ößÔ∏è")


@strange_router.message(F.text.startswith('+–≥–æ—Ä–æ–¥'))
async def new_city(message: Message) -> Any:
    city_space = message.text.find(' ')
    city = message.text[city_space + 1:]
    user = await rq.get_user(message.from_user.id)
    user.city = city
    async with md.async_session() as session:
        await session.merge(user)
        await session.commit()
    if city.lower() == "–∏–µ—Ä—É—Å–∞–ª–∏–º":
        item = await rq.get_item(message.from_user.id)
        item.crusader_suit = True
        async with md.async_session() as session:
            await session.merge(item)
            await session.commit()
        await message.answer("–í–µ—Ä–Ω—ë–º –°–≤—è—â–µ–Ω–Ω—É—é –∑–µ–º–ª—é –°–≤—è—â–µ–Ω–Ω–æ–π –†–∏–º—Å–∫–æ–π –ò–º–ø–µ—Ä–∏–∏!\n–ü–æ–ª—É—á–µ–Ω –∫–æ—Å—Ç—é–º –∫—Ä–µ—Å—Ç–æ–Ω–æ—Å—Ü–∞!")
    await message.answer(f"–¢–≤–æ–π –≥–æ—Ä–æ–¥: {user.city}üèôÔ∏è")


@strange_router.message(F.text.startswith('+–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å') | F.text.startswith('+–Ω–∞—Ü–∏—è'))
async def new_nation(message: Message) -> Any:
    nation_space = message.text.find(' ')
    nation = message.text[nation_space + 1:]
    user = await rq.get_user(message.from_user.id)
    user.nation = nation
    async with md.async_session() as session:
        await session.merge(user)
        await session.commit()
    await message.answer(f"–¢–≤–æ—è –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {user.nation}üëΩ")


@strange_router.message(F.text.lower().contains('—Å—Ç–∞–ª–∏–Ω'))
async def stalin(message: Message) -> Any:
    user = await rq.get_user(message.from_user.id)
    mention = message.from_user.mention_html(message.from_user.first_name)
    until_date = pc.parse_time("5m")
    await message.reply("–†–∞—Å—Å—Ç—Ä–µ–ª—è—Ç—å!")

    with suppress(TelegramBadRequest):
        user.health = 0
        async with md.async_session() as session:
            await session.merge(user)
            await session.commit()
        await message.answer(f"{mention} –±—ã–ª —Ä–∞—Å—Å—Ç—Ä–µ–ª–µ–Ω –ò. –í. –°—Ç–∞–ª–∏–Ω–æ–º", parse_mode="HTML")
        await bot.restrict_chat_member(chat_id=message.chat.id, user_id=message.from_user.id, until_date=until_date, permissions=ChatPermissions(can_send_messages=False))


@strange_router.message(F.text.lower().contains('–≥–∏—Ç–ª–µ—Ä'))
async def hitler(message: Message) -> Any:
    user = await rq.get_user(message.from_user.id)
    mention = message.from_user.mention_html(message.from_user.first_name)
    until_date = pc.parse_time("5m")
    if (user.nation == '–µ–≤—Ä–µ–π') or (user.nation == '–ï–≤—Ä–µ–π'):
        await message.reply("–í –≥–∞–∑–æ–≤—É—é –∫–∞–º–µ—Ä—É –µ–≤—Ä–µ—è!")

        with suppress(TelegramBadRequest):
            user.health = 0
            async with md.async_session() as session:
                await session.merge(user)
                await session.commit()
            await message.answer(f"{mention} —Å–¥–æ—Ö –≤ –≥–∞–∑–æ–≤–æ–π –∫–∞–º–µ—Ä–µ, –Ω–µ –±—É–¥–∏ –ª–∏—Ö–æ, –ø–æ–∫–∞ –æ–Ω–æ —Ç–∏—Ö–æ", parse_mode="HTML")
            await bot.restrict_chat_member(chat_id=message.chat.id, user_id=message.from_user.id, until_date=until_date, permissions=ChatPermissions(can_send_messages=False))


@strange_router.message(F.text.lower().contains('—è –ª—é–±–ª—é –ø—É—Ç–∏–Ω–∞'))
async def putin(message: Message) -> Any:
    user = await rq.get_user(message.from_user.id)
    mention = message.from_user.mention_html(message.from_user.first_name)

    with suppress(TelegramBadRequest):
        user.money += 100
        async with md.async_session() as session:
            await session.merge(user)
            await session.commit()
        await message.answer(f"{mention} –≤–∞–º –Ω–∞ —Å—á—ë—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ 100 —Ä—É–±–ª–µ–π –æ—Ç –í. –í. –ü—É—Ç–∏–∏–Ω", parse_mode="HTML")


@strange_router.message(F.text.lower().contains('niggers are sucking') | F.text.lower().contains('niggers suck') | F.text.lower().contains('i am nigger'))
async def nigger(message: Message) -> Any:
    await message.reply("–ë—É–¥—å –º—ã –≤ worns of armogedon, —è –±—ã —Ç–µ–±—è –∑–∞–±–∞–Ω–∏–ª, –Ω–æ —Å–µ–≥–æ–¥–Ω—è –¥–µ–±–µ –ø–æ–≤–µ–∑–ª–æ")


@strange_router.message(F.text.lower().contains('make america greate again'))
async def greate_america(message: Message) -> Any:
    shot_chance = random.randint(0, 2)
    user = await rq.get_user(message.from_user.id)
    mention = message.from_user.mention_html(message.from_user.first_name)
    if shot_chance == 0:
        user.health = 0
        async with md.async_session() as session:
            await session.merge(user)
            await session.commit()
        await message.reply(f"{mention} –±—ã–ª –∑–∞—Å—Ç—Ä–µ–ª–µ–Ω, —Ç—ã –∂ –Ω–µ –¢—Ä–∞–º–ø –µ–π –±–æ–≥", parse_mode="HTML")
    elif shot_chance > 0:
        user.health -= 5
        async with md.async_session() as session:
            await session.merge(user)
            await session.commit()
        await message.answer(f"{mention} —Å–µ–≥–æ–¥–Ω—è —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, –æ–¥–Ω–∞–∫–æ –∫–æ–º—É-—Ç–æ –≤—Å—ë –∂–µ –ø—Ä–æ—Å—Ç—Ä–µ–ª–∏–ª–∏ —É—Ö–æ", parse_mode="HTML")
